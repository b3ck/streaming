version: '3.8'
services:
  #multipath-udp-receiver:
  #  platform: linux/amd64
  #  build:
  #    context: .
  #    dockerfile: ./Dockerfile.multipath-udp-receiver
  #  image: ${REPOSITORY_NAME}/${PROJECT_NAME}-multipath-udp-receiver:${GLOBAL_VERSION}
  #  container_name: ${PROJECT_NAME}-multipath-udp-receiver
  #  restart: unless-stopped
  #  stdin_open: true
  #  tty: true
  #  ports:
  #      - "1985:1985/udp"
  #multipath-udp-sender:
  #platform: linux/amd64
  #  build:
  #      context: .
  #      dockerfile: ./Dockerfile.multipath-udp-sender
  #  image: ${REPOSITORY_NAME}/${PROJECT_NAME}-multipath-udp-sender:${GLOBAL_VERSION}
  #  container_name: ${PROJECT_NAME}-multipath-udp-sender
  #  restart: unless-stopped
  #  stdin_open: true
  #  tty: true
  #  ports:
  #      - "1935:1935/udp"
  #nginx-rtmp-srt-transmuxer:
  #  platform: linux/amd64
  #  build:
  #      context: .
  #      dockerfile: ./Dockerfile.nginx-rtmp-srt-transmuxer
  #  image: ${REPOSITORY_NAME}/${PROJECT_NAME}-nginx-rtmp-srt-transmuxer:${GLOBAL_VERSION}
  #  container_name: ${PROJECT_NAME}-nginx-rtmp-srt-transmuxer
  #  restart: unless-stopped
  #  stdin_open: true
  #  tty: true
  #  ports:
  #      - "1935:1935/tcp"
  #      - "8484:80/tcp"
  #srt-relay:
  #  platform: linux/amd64
  #  build:
  #      context: .
  #      dockerfile: ./Dockerfile.srt-relay
  #  image: ${REPOSITORY_NAME}/${PROJECT_NAME}-srt-relay:${GLOBAL_VERSION}
  #  container_name: ${PROJECT_NAME}-srt-relay
  #  restart: unless-stopped
  #  stdin_open: true
  #  tty: true
  #  ports:
  #      - "1935:1935/udp"
  #srtla-relay:
  #  platform: linux/amd64
  #  build:
  #      context: .
  #      dockerfile: ./Dockerfile.srtla-relay
  #  image: ${REPOSITORY_NAME}/${PROJECT_NAME}-srtla-relay:${GLOBAL_VERSION}
  #  container_name: ${PROJECT_NAME}-srtla-relay
  #  restart: unless-stopped
  #  stdin_open: true
  #  tty: true
  #  ports:
  #    - "1936:1936/udp"
  #    - "8181:8181/tcp"
    #volumes:
    #  - "sls.conf:/etc/sls/sls.conf"
  belabox-srtla-receiver:
    platform: linux/amd64
    build:
        context: .
        dockerfile: ./Dockerfile.belabox-srtla-receiver
    image: ${REPOSITORY_NAME}/${PROJECT_NAME}-belabox-srtla-receiver:${GLOBAL_VERSION}
    container_name: ${PROJECT_NAME}-belabox-srtla-receiver
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - "5000:5000/udp"
      - "5001:5001/udp"
    volumes:
      - ./entrypoint.sh:/tmp/entrypoint.sh
    environment:
      - SRT_ENDPOINT_ADDR=noalbs-srtla
      - SRT_ENDPOINT_PORT=30000
    depends_on:
      - "noalbs-srtla"
  noalbs-srtla:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./Dockerfile.noalbs-srtla
    image: ${REPOSITORY_NAME}/noalbs-srtla:${GLOBAL_VERSION}
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports: 
      - "30000:30000/udp"
      - "8181:8181/tcp"
    #volumes:
    #  - ./sls.conf:/etc/sls/sls.conf
    #  - ./logs:/logs
  noalbs-sls:
    platform: linux/amd64
    build:
        context: .
        dockerfile: ./Dockerfile.noalbs-sls
    image: ${REPOSITORY_NAME}/noalbs-sls:${GLOBAL_VERSION}
    container_name: noalbs-sls
    restart: unless-stopped
    stdin_open: true
    tty: true
    command: npm start
    #volumes:
    #  - ./config.json:/noalbs/config.json
    #depends_on:
    #  - "noalbs-srtla"
  #belabox-srtla-sender:
    #platform: linux/amd64
    #build:
    #    context: .
    #    dockerfile: ./Dockerfile.belabox-srtla-sender
    #image: ${REPOSITORY_NAME}/${PROJECT_NAME}-belabox-srtla-sender:${GLOBAL_VERSION}
    #container_name: ${PROJECT_NAME}-belabox-srtla-sender
    #restart: unless-stopped
    #stdin_open: true
    #tty: true
    #ports:
    #  - "6000:6000/udp"
    #environment:
    #  - EXTERNAL_IP=
    #command: /tmp/srtla/srtla_send 6000 ${EXTERNAL_IP} 5000 /tmp/srtla_ips
    #volumes:
    #  - "./srtla_ips:/tmp/srtla_ips"